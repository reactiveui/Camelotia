<UserControl xmlns="https://github.com/avaloniaui"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:views="clr-namespace:Camelotia.Presentation.Avalonia.Views"
             xmlns:interfaces="clr-namespace:Camelotia.Presentation.Interfaces;assembly=Camelotia.Presentation"
             xmlns:designTime="clr-namespace:Camelotia.Presentation.DesignTime;assembly=Camelotia.Presentation"
             x:Class="Camelotia.Presentation.Avalonia.Views.ProviderView">
    <Design.DataContext>
        <designTime:DesignTimeProviderViewModel />
    </Design.DataContext>
    <Grid>
        <Grid>
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto" />
                <RowDefinition Height="*" />
                <RowDefinition Height="Auto" />
                <RowDefinition Height="Auto" />
            </Grid.RowDefinitions>
            <Grid Grid.Row="0" Margin="5">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*" />
                    <ColumnDefinition Width="4*" />
                    <ColumnDefinition Width="*" />
                </Grid.ColumnDefinitions>
                <Button Grid.Column="0"
                        Command="{Binding Back}"
                        HorizontalAlignment="Stretch"
                        Classes="Primary"
                        Content="Back" />
                <TextBlock Grid.Column="1"
                         IsVisible="{Binding !ShowBreadCrumbs}"
                         Text="{Binding CurrentPath}"
                         VerticalAlignment="Center"
                         FontSize="14"
                         Margin="15 0" />
                <ListBox Grid.Column="1"
                         IsVisible="{Binding ShowBreadCrumbs}"
                         Items="{Binding BreadCrumbs}"
                         ScrollViewer.VerticalScrollBarVisibility="Hidden"
                         ScrollViewer.HorizontalScrollBarVisibility="Hidden"
                         Margin="5">
                  <ListBox.Styles>
                    <Style Selector="ListBox > Border">
                      <Setter Property="CornerRadius" Value="5"/>
                      <Setter Property="Background" Value="{DynamicResource ThemeCardBrush}"/>
                    </Style>
                    <Style Selector="Button">
                      <Setter Property="Margin" Value="0"/>
                      <Setter Property="Padding" Value="5,0,0,0"/>
                      <Setter Property="VerticalContentAlignment" Value="Center"/>
                      <Setter Property="Background" Value="Transparent"/>
                    </Style>
                    <Style Selector="Menu">
                      <Setter Property="Padding" Value="0"/>                      
                      <Setter Property="Background" Value="Transparent"/>                      
                      <Setter Property="Foreground" Value="{DynamicResource ThemeForegroundBrush}"/>
                    </Style>
                    <Style Selector="MenuItem">
                      <Setter Property="Padding" Value="0"/>
                      <Setter Property="Margin" Value="2,0"/>                      
                    </Style>
                    <Style Selector="MenuItem:pointerover /template/ Border#root">
                      <Setter Property="Background" Value="{DynamicResource HighlightBrush}" />
                    </Style>
                    <Style Selector="MenuItem /template/ Border#root">
                      <Setter Property="CornerRadius" Value="5" />
                    </Style>
                    <Style Selector="ListBoxItem">
                      <Setter Property="Padding" Value="0"/>
                      <Setter Property="Margin" Value="0"/>
                      <Setter Property="BorderThickness" Value="0"/>
                    </Style>                
                    <Style Selector="TextBlock">                      
                      <Setter Property="VerticalAlignment" Value="Center"/>                      
                    </Style>
                  </ListBox.Styles>
                  <ListBox.ItemsPanel>
                    <ItemsPanelTemplate>
                      <StackPanel Orientation="Horizontal"/>
                    </ItemsPanelTemplate>
                  </ListBox.ItemsPanel>
                  <ListBox.ItemTemplate>
                    <DataTemplate>
                      <Button Command="{Binding Provider.SetPath}" CommandParameter="{Binding FullPath}">
                        <StackPanel Orientation="Horizontal">
                          <TextBlock Text="{Binding Name}"/>
                          <Menu>
                            <MenuItem Header=">" Items="{Binding Children}">
                              <MenuItem.Styles>
                                <Style Selector="MenuItem">
                                  <Setter Property="Header" Value="{Binding Name}"/>
                                  <Setter Property="Command" Value="{Binding Provider.SetPath}"/>
                                  <Setter Property="CommandParameter" Value="{Binding FullPath}"/>
                                </Style>
                              </MenuItem.Styles>
                            </MenuItem>
                          </Menu>
                        </StackPanel>
                      </Button>
                    </DataTemplate>
                  </ListBox.ItemTemplate>                
                </ListBox>              
                <Button Grid.Column="2"
                        Command="{Binding Open}"
                        HorizontalAlignment="Stretch"
                        Classes="Primary"
                        Content="Open" />
            </Grid>
            <Border Grid.Row="1" 
                    BorderThickness="0 2 0 2"
                    BorderBrush="{DynamicResource ThemeBorderLowBrush}">
                <Grid>
                    <ListBox Padding="0"
                             Background="{DynamicResource ThemeCardBrush}"
                             BorderThickness="0"
                             SelectionMode="Toggle"
                             Items="{Binding Files}"
                             IsVisible="{Binding IsReady}"
                             ScrollViewer.HorizontalScrollBarVisibility="Hidden"
                             SelectedItem="{Binding SelectedFile, Mode=TwoWay}">
                        <ListBox.ItemTemplate>
                            <DataTemplate DataType="interfaces:IFileViewModel">
                                <views:FileView DataContext="{Binding}" />
                            </DataTemplate>
                        </ListBox.ItemTemplate>
                    </ListBox>
                    <Grid IsVisible="{Binding HasErrorMessage}" 
                          Background="{DynamicResource ThemeCardBrush}">
                        <StackPanel VerticalAlignment="Center">
                            <Ellipse Width="10" Height="10"
                                     HorizontalAlignment="Center"
                                     Fill="#ff0000"
                                     Margin="10" />
                            <TextBlock HorizontalAlignment="Center"
                                       Text="Can't perform the operation, an error has occured."/>
                        </StackPanel>
                    </Grid>
                    <Grid IsVisible="{Binding IsCurrentPathEmpty}" Background="{DynamicResource ThemeCardBrush}">
                        <StackPanel VerticalAlignment="Center">
                            <Ellipse Width="10" Height="10"
                                     HorizontalAlignment="Center"
                                     Fill="#ff0000"
                                     Margin="10" />
                            <TextBlock HorizontalAlignment="Center"
                                       Text="Whoops, no files here!" />
                        </StackPanel>
                    </Grid>
                    <Grid IsVisible="{Binding IsLoading}" 
                          Background="{DynamicResource ThemeCardBrush}">
                        <StackPanel VerticalAlignment="Center">
                            <ProgressBar HorizontalAlignment="Stretch"
                                         IsIndeterminate="{Binding IsLoading}" />
                            <TextBlock HorizontalAlignment="Center"
                                       Text="Please, wait..." />
                        </StackPanel>
                    </Grid>
                    <Grid IsVisible="{Binding Folder.IsVisible}" 
                          Background="{DynamicResource ThemeCardBrush}">
                        <views:CreateFolderView DataContext="{Binding Folder}" />
                    </Grid>
                    <Grid IsVisible="{Binding Rename.IsVisible}" 
                          Background="{DynamicResource ThemeCardBrush}">
                        <views:RenameFileView DataContext="{Binding Rename}" />
                    </Grid>
                </Grid>
            </Border>
            <Grid Grid.Row="2" Margin="5 5 5 0">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*" />
                    <ColumnDefinition Width="*" />
                    <ColumnDefinition Width="2*" />
                    <ColumnDefinition Width="*" />
                    <ColumnDefinition Width="*" />
                </Grid.ColumnDefinitions>
                <Button Grid.Column="0"
                        Content="Delete"
                        Classes="Primary"
                        HorizontalAlignment="Stretch"
                        Command="{Binding DeleteSelectedFile}" />
                <Button Grid.Column="1"
                        Content="Rename"
                        Classes="Primary"
                        HorizontalAlignment="Stretch"
                        Command="{Binding Rename.Open}"/>
                <StackPanel Grid.Column="2" Orientation="Horizontal" 
                            Margin="5" VerticalAlignment="Center">
                    <TextBlock Text="{Binding SelectedFile.Name}"
                               Opacity="0.5" />
                </StackPanel>
                <Button Grid.Column="3"
                        Content="Upload"
                        Classes="Primary"
                        HorizontalAlignment="Stretch"
                        Command="{Binding UploadToCurrentPath}" />
                <Button Grid.Column="4"
                        Content="Download"
                        Classes="Primary"
                        HorizontalAlignment="Stretch"
                        Command="{Binding DownloadSelectedFile}" />
            </Grid>
            <Grid Grid.Row="3" Margin="5 0 5 5">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*" />
                    <ColumnDefinition Width="*" />
                    <ColumnDefinition Width="2*" />
                    <ColumnDefinition Width="*" />
                    <ColumnDefinition Width="*" />
                </Grid.ColumnDefinitions>
                <Button Grid.Column="0"
                        Content="Logout"
                        Classes="Primary"
                        HorizontalAlignment="Stretch"
                        Command="{Binding Logout}" />
                <Button Grid.Column="1"
                        Content="Unselect"
                        Classes="Primary"
                        HorizontalAlignment="Stretch"
                        Command="{Binding UnselectFile}" />
                <StackPanel Grid.Column="2" Orientation="Horizontal" 
                            Margin="5" VerticalAlignment="Center">
                    <TextBlock Text="Refreshing in: " />
                    <TextBlock Text="{Binding RefreshingIn}" />
                </StackPanel>
                <Button Grid.Column="3" 
                        Content="Create" 
                        Classes="Primary"
                        HorizontalAlignment="Stretch" 
                        Command="{Binding Folder.Open}"/>
                <Button Grid.Column="4"
                        Content="Refresh"
                        HorizontalAlignment="Stretch"
                        Command="{Binding Refresh}" />
            </Grid>
        </Grid>
        <Grid IsVisible="{Binding Auth.IsAnonymous}">
            <views:AuthView DataContext="{Binding Auth}" />
        </Grid>
    </Grid>
</UserControl>

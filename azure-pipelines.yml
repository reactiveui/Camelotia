jobs:
- job: Linux
  pool:
    vmImage: 'ubuntu 16.04'
  variables:
    buildConfiguration: 'Release'
  steps:
  - task: DotNetCoreInstaller@0
    inputs:
      version: '2.2.203'
  - script: cd $(Build.SourcesDirectory) && bash ./build.sh
    displayName: 'Linux Build and Tests'
  - task: PublishTestResults@2
    inputs:
      testRunner: VSTest
      testResultsFiles: '**/*.trx'

- job: Windows
  pool:
    vmImage: 'windows-2019'
  variables:
    buildConfiguration: 'Release'
  steps:
  - task: DotNetCoreInstaller@0
    inputs:
      version: '2.2.203'
  - script: cd $(Build.SourcesDirectory) && powershell -ExecutionPolicy Unrestricted ./build.ps1 --full
    displayName: 'Windows Full Build and Tests'
  - task: PublishTestResults@2
    inputs:
      testRunner: VSTest
      testResultsFiles: '**/*.trx'
  - task: PublishCodeCoverageResults@1
    inputs:
      summaryFileLocation: $(Build.SourcesDirectory)\artifacts\coverage.cobertura.xml
      reportDirectory: $(Build.SourcesDirectory)\artifacts
      codecoverageTool: cobertura
